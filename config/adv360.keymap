#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
        #include "version.dtsi"
        #ifndef VERSION_MACRO

        macro_ver: macro_ver {
            compatible = "zmk,behavior-macro";
            label = "macro_version";
            #binding-cells = <0>;
            bindings = <&kp RET>;
        };

        #endif

        homerow_mods: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <0>;
        };

        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 38 39 40 41 42 43 44 45 54 55 56 57 58 59 69 70 71 72 73 74 75 35 36 37 38 52 53 65 66 67 68 69 70 61 62 63 64 60>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 35 36 46 47 48 49 50 51 52 60 61 62 63 64 65 66 67 37 38 53 68 69 70 71 72 73 74 75>;
        };

        hmod_tkey: hmod_tkey {
            compatible = "zmk,behavior-hold-tap";
            label = "HMOD_TKEY";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <280>;
            flavor = "balanced";
            quick-tap-ms = <250>;
            require-prior-idle-ms = <150>;
        };

        hp: hp {
            compatible = "zmk,behavior-hold-tap";
            label = "HP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <0>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&hp LGUI EQUAL  &kp N1       &kp N2       &kp N3        &kp N4         &kp N5  &tog 1                                                                                                 &mo 4                 &kp N6  &kp N7         &kp N8            &kp N9         &kp N0          &hp RCMD MINUS
&hp LALT TAB    &kp Q        &kp W        &kp E         &kp R          &kp T   &kp LG(LS(N1))                                                                                         &kp LG(LS(NUMBER_3))  &kp Y   &kp U          &kp I             &kp O          &kp P           &hp RALT BSLH
&hp LCTRL ESC   &kp A        &kp S        &kp D         &kp F          &kp G   &kp LG(LS(NUMBER_2))    &kp LEFT_CONTROL  &kp LEFT_ALT          &kp RIGHT_ALT      &kp RCTRL           &kp LG(LS(NUMBER_4))  &kp H   &kp J          &kp K             &kp L          &kp SEMI        &hp RCTRL SQT
&kp LSHFT       &hml LGUI Z  &hml LALT X  &hml LCTRL C  &hml LSHIFT V  &kp B                                             &kp LEFT_SHIFT        &kp RIGHT_SHIFT                                              &kp N   &hmr RSHIFT M  &hmr RCTRL COMMA  &hmr RALT DOT  &hmr RGUI FSLH  &kp RSHFT
&mo 2           &kp GRAVE    &kp CAPS     &kp LBKT      &kp RBKT               &hmod_tkey 2 BACKSPACE  &hmod_tkey 3 TAB  &kp LEFT_COMMAND      &kp RIGHT_COMMAND  &hmod_tkey 1 ENTER  &hmod_tkey 2 SPACE            &kp LEFT       &kp DOWN          &kp UP         &kp RIGHT       &mo 2
            >;
        };

        keypad {
            bindings = <
&trans     &kp N1  &kp N2  &kp N3  &kp N4  &kp N5  &trans                                         &trans  &kp I       &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &trans
&trans     &kp Q   &kp W   &kp E   &kp R   &kp T   &trans                                         &trans  &kp M       &kp KP_N7   &kp KP_N8     &kp KP_N9      &kp KP_MINUS     &trans
&kp LCTRL  &kp A   &kp S   &kp D   &kp F   &kp G   &trans     &trans  &trans      &trans  &trans  &trans  &kp KP_DOT  &kp KP_N4   &kp KP_N5     &kp KP_N6      &kp KP_PLUS      &trans
&trans     &kp Z   &kp X   &kp C   &kp V   &kp B                      &trans      &trans                  &kp KP_N0   &kp KP_N1   &kp KP_N2     &kp KP_N3      &kp KP_ENTER     &trans
&trans     &none   &none   &trans  &trans          &kp SPACE  &trans  &trans      &trans  &trans  &trans              &trans      &trans        &none          &none            &trans
            >;
        };

        sym {
            bindings = <
&trans  &trans     &trans         &trans     &trans    &trans     &trans                                      &trans  &trans     &trans     &trans         &trans            &trans     &trans
&trans  &kp EXCL   &kp AT         &kp POUND  &kp DLLR  &kp PRCNT  &trans                                      &trans  &kp GRAVE  &kp SQT    &kp DQT        &kp PLUS          &kp PIPE   &trans
&trans  &kp CARET  &kp AMPERSAND  &kp STAR   &kp LPAR  &kp RPAR   &trans  &trans  &trans      &trans  &trans  &trans  &kp MINUS  &kp UNDER  &kp LESS_THAN  &kp GREATER_THAN  &kp SEMI   &kp QUESTION
&trans  &kp TILDE  &kp LBKT       &kp RBKT   &kp LBRC  &kp RBRC                   &trans      &trans                  &kp COLON  &kp EQUAL  &kp COMMA      &kp DOT           &kp SLASH  &trans
&trans  &trans     &trans         &trans     &trans               &trans  &trans  &trans      &trans  &trans  &trans             &kp HOME   &kp PG_DN      &kp PG_UP         &kp END    &trans
            >;
        };

        nav {
            bindings = <
&trans  &kp F1    &kp F2        &kp F3      &kp F4        &kp F5        &trans                                      &trans  &kp F6    &kp F7      &kp F8     &kp F9     &kp F10    &kp F11
&trans  &none     &kp C_VOL_DN  &kp C_MUTE  &kp C_VOL_UP  &kp C_BRI_UP  &trans                                      &trans  &kp INS   &kp HOME    &kp UP     &kp END    &kp PG_UP  &kp F12
&trans  &none     &kp C_PREV    &kp C_PP    &kp C_NEXT    &kp C_BRI_DN  &trans  &trans  &trans      &trans  &trans  &trans  &kp BSPC  &kp LEFT    &kp DOWN   &kp RIGHT  &kp PG_DN  &trans
&trans  &kp LCMD  &kp LALT      &kp LCTRL   &kp LSHIFT    &none                         &trans      &trans                  &kp DEL   &kp RSHIFT  &kp RCTRL  &kp RALT   &kp RCMD   &trans
&trans  &trans    &trans        &trans      &trans                      &trans  &trans  &trans      &trans  &trans  &trans            &trans      &trans     &trans     &trans     &trans
            >;
        };

        mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none  &none       &none       &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none  &none       &none       &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none  &none       &none       &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none  &none       &none       &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &none  &bl BL_DEC  &bl BL_INC  &none  &none
            >;
        };
    };
};
